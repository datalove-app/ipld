[package]
name = "ipld"
version = "0.0.3"
authors = ["sunny-g <sunny.gonna@gmail.com>"]
description = "Types, traits and macros for the IPLD Data Model, Schema, Representation, and Selector specifications."
license = "MIT or Apache-2.0"
edition = "2021"

[lib]
name = "ipld"
path = "src/lib.rs"

[dependencies]
# core
arrayvec = { version = "0.7", default-features = false }
bytes = { version = "1.2", default-features = false, features = ["serde"] }
cid = { version = "0.8", default-features = false, features = ["serde-codec"] }
# digest = { version = "0.10", optional = true }
# erased-serde = { version = "0.3", default-features = false }
# TODO: optional? also not no_std
ipld-macros = { path = "./macros" }
ipld-macros-internals = { path = "./macros-internals" }
multibase = { version = "0.9", default-features = false }
# todo: allow for better customization of multihash
multihash = { version = "0.16", default-features = false, features = ["multihash-impl", "secure-hashes"] }
serde = { version = "1.0", default-features = false, features = ["derive", "rc"] }
# serde_repr = "0.1"
# TODO: not no_std
thiserror = "1.0"
unicode-normalization = { version = "0.1", default-features = false }

# codecs
rkyv = { version = "*", default-features = false, optional = true }
serde_cbor = { version = "0.11", default-features = false, optional = true, features = ["tags"] }
# cbor4ii = { version = "0.2", optional = true, features = ["serde1", "use_std"] }
# serde_ipld_dagcbor = { version = "0.2", optional = true, features = ["std"] }
serde_json = { version = "1.0", default-features = false, optional = true, features = ["float_roundtrip", "unbounded_depth"] }
# simd-json = { version = "0.6", optional = true, features = ["serde_impl", "128bit"] }
# risc0-zeroio = { git = "https://github.com/risc0/risc0", default-features = false, optional = true }
# risc0-zeroio-derive = { git = "https://github.com/risc0/risc0", default-features = false, optional = true }

# compatibility with other libraries
im = { version = "*", default-features = false, optional = true }
indexmap = { version = "*", default-features = false, optional = true }
libp2p-core = { version = "0.38", optional = true }
multiaddr = { version = "0.17", default-features = false, optional = true }
# bigint
# ed25519, secp256k1, rsa, bls, recrypt
# time, ?half
# serdect
# radixdb = { version = "0.2", optional = true }
wnfs = { version = "*", default-features = false, optional = true }

# adls
crdts = { version = "7.2", default-features = false, optional = true }
# merkle-log = { version = "*", default-features = false, optional = true }
# vb_accumulator = { version = "*", default-features = false, optional = true }

# misc
anyhow = "1.0"
# const-str = "0.3"
# const_format = "0.2"
core2 = { version = "0.4", default-features = false, optional = true }
delegate = { version = "0.8" }
# derive_builder = "0.11"
downcast-rs = "1.2"
# lexical, itoa = "1.0" dtoa?
paste = "1.0"
# ref-cast = "1.0"

[dev-dependencies]
# criterion = "0.4"
# proptest = "1.0"

[features]
default = [
  "std",
  "multicodec",
  # TODO: remove these
  "dev",
  "multiaddr",
]
alloc = [
  "cid/alloc",
  "multihash/alloc",
  "serde/alloc",
  "serde_cbor?/alloc",
  "serde_json?/alloc",
]
std = [
  "alloc",
  "sync",
  "arrayvec/std",
  "bytes/std",
  "cid/std",
  "core2/std",
  "multibase/std",
  "multihash/std",
  "serde/std",
  "unicode-normalization/std",
  # optional
  "indexmap?/std",
  "serde_cbor?/std",
  "serde_json?/std",
]
sync = []
parallel = ["std"]
# activate dev docs
dev = [
  "hamt",
  "merkle-crdts",
]

# codecs
dag-cbor = ["dep:serde_cbor"]
# dag-cbor = ["cbor4ii", "delegate"]
# dag-cbor = ["serde_ipld_dagcbor", "delegate"]
dag-json = ["dep:serde_json"]
# dag-pb = []
# raw = []
# enables all available multicodecs
multicodec = ["dag-cbor", "dag-json"]
# # enables simd-related implementations, including an alternate dag-json
# simd = ["dag-json", "simd-json"]

# compatibility with other libraries
crdts = ["dep:crdts", "std"]
# ecdsa = []
# dalek = []
indexmap = ["dep:indexmap"]
im = ["dep:im"]
libp2p = ["dep:libp2p-core"]
multiaddr = ["dep:multiaddr"]
# signature = []
wnfs = ["dep:wnfs"]

# adls
fbl = []
hamt = []
merkle-crdts = ["crdts"]
# merkle-log = ["dep:merkle-log"]
prolly-tree = []
# vb-collection = ["dep:vb_accumulator"]


[package.metadata.docs.rs]
features = ["multicodec", "std", "dev"]
rustdoc-args = ["--cfg", "docsrs"]

[workspace]
members = [
  "macros",
  "macros-internals",
]
exclude = [
  "codec-fixtures/rust",
]

[patch.crates-io]
# cid = { path = "../rust-cid" }
# multihash = { path = "../rust-multihash" }
wnfs = { path = "vendor/wnfs/wnfs" }
